// Code generated by "go run answers_generate.go"; DO NOT EDIT.
/*
 * ZDNS Copyright 2024 Regents of the University of Michigan
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/*
 * BSD 3-Clause License

 * Copyright (c) 2009, The Go Authors. Extensions copyright (c) 2011, Miek Gieben.
 * All rights reserved.

 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:

 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.

 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.

 * 3. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from
 *    this software without specific prior written permission.

 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package zdns

func (ans Answer) BaseAns() *Answer           { return &ans }
func (ans AFSDBAnswer) BaseAns() *Answer      { return &ans.Answer }
func (ans CAAAnswer) BaseAns() *Answer        { return &ans.Answer }
func (ans CERTAnswer) BaseAns() *Answer       { return &ans.Answer }
func (ans CSYNCAnswer) BaseAns() *Answer      { return &ans.Answer }
func (ans DNSKEYAnswer) BaseAns() *Answer     { return &ans.Answer }
func (ans DSAnswer) BaseAns() *Answer         { return &ans.Answer }
func (ans GPOSAnswer) BaseAns() *Answer       { return &ans.Answer }
func (ans HINFOAnswer) BaseAns() *Answer      { return &ans.Answer }
func (ans HIPAnswer) BaseAns() *Answer        { return &ans.Answer }
func (ans LOCAnswer) BaseAns() *Answer        { return &ans.Answer }
func (ans MINFOAnswer) BaseAns() *Answer      { return &ans.Answer }
func (ans NAPTRAnswer) BaseAns() *Answer      { return &ans.Answer }
func (ans NSEC3Answer) BaseAns() *Answer      { return &ans.Answer }
func (ans NSEC3ParamAnswer) BaseAns() *Answer { return &ans.Answer }
func (ans NSECAnswer) BaseAns() *Answer       { return &ans.Answer }
func (ans PXAnswer) BaseAns() *Answer         { return &ans.Answer }
func (ans PrefAnswer) BaseAns() *Answer       { return &ans.Answer }
func (ans RPAnswer) BaseAns() *Answer         { return &ans.Answer }
func (ans RRSIGAnswer) BaseAns() *Answer      { return &ans.Answer }
func (ans SMIMEAAnswer) BaseAns() *Answer     { return &ans.Answer }
func (ans SOAAnswer) BaseAns() *Answer        { return &ans.Answer }
func (ans SRVAnswer) BaseAns() *Answer        { return &ans.Answer }
func (ans SSHFPAnswer) BaseAns() *Answer      { return &ans.Answer }
func (ans SVCBAnswer) BaseAns() *Answer       { return &ans.Answer }
func (ans TALINKAnswer) BaseAns() *Answer     { return &ans.Answer }
func (ans TKEYAnswer) BaseAns() *Answer       { return &ans.Answer }
func (ans TLSAAnswer) BaseAns() *Answer       { return &ans.Answer }
func (ans URIAnswer) BaseAns() *Answer        { return &ans.Answer }
