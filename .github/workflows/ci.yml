name: CI
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  check-license:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check for ZDNS License Header
        run: |
          ./.github/workflows/check_license.sh
  # This tests runs both unit tests and integration tests that validate that ZDNS can pull many DNS record types against
  # our controlled domain
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'
      - name: Build
        run: |
          go version
          make
      - name: Unit Tests
        run: go test -v ./...
      - name: Integration Tests
        run: |
          sudo rm /etc/resolv.conf
          sudo ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf
          python --version
          pip install -r testing/requirements.txt
          ./testing/integration_tests.py
  build-and-large-scan-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'
      - name: Build
        run: |
          go version
          make
      - name: Integration Tests
        run: |
          sudo rm /etc/resolv.conf
          sudo ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf
          python --version
          ./testing/large_scan_integration/large_scan_integration_tests.py
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'
      - name: Other lint
        run: |
          go install golang.org/x/tools/cmd/goimports@latest
          output=$(goimports -d -local "github.com/zmap/zdns" ./)
          if [ -n "$output" ]; then
            echo "goimports found issues:"
            echo "$output"
            exit 1
          else
            echo "No issues found by goimports."
          fi
          output=$(gofmt -d .)
            if [ -n "$output" ]; then
                echo "gofmt found issues:"
                echo "$output"
                exit 1
            else
                echo "No issues found by gofmt."
            fi
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6.0.1
